@model VehicleDashboard.Models.VehicleOptionModel

@{
    ViewBag.Title = "Vehicles that Should be on FitzMall";

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    System.Globalization.NumberFormatInfo nfi = new System.Globalization.CultureInfo("en-US", false).NumberFormat;
    nfi.CurrencyDecimalDigits = 0;
    nfi.PercentDecimalDigits = 1;
    nfi.CurrencySymbol = "";

    var locations = Model.UsedVehicleDashboard.WebsiteUsedInventory.Select(x => x.V_loc).Distinct().OrderBy(X => X).ToList();
    var allUsedInventoryList = new List<VehicleDashboard.Models.CSV_vehicleUSED>();

    VehicleDashboard.Models.CSV_vehicleUSED[] allUsedInventory = new VehicleDashboard.Models.CSV_vehicleUSED[Model.UsedVehicleDashboard.AllUsedInventory.Count];
    Model.UsedVehicleDashboard.AllUsedInventory.CopyTo(allUsedInventory);
    allUsedInventoryList = allUsedInventory.ToList();

    if (Model.Location != null && Model.Location != "ALL" && Model.Location != "")
    {

        if (Model.Location == "FBC")
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == "FBS" || x.loc.Contains("FBS"));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == "FBC");

        }
        else
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == Model.Location || x.loc.Contains(Model.Location));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == Model.Location);

        }

        if (Model.Location == "CJE")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "JEEP" || x.MAKE == "CHRYSLER"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Jeep" || x.V_MakeName == "Chrysler"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CJE");
        }
        else if (Model.Location == "CHY")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "HYUNDAI" || x.MAKE == "GENESIS"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Hyundai" || x.V_MakeName == "Genesis"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CHY");
        }
        else if (Model.Location == "CSS")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Subaru"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CSS");
        }
        else if (Model.Location == "FBC")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Subaru"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBC" || x.VehicleLocation == "FBS");
        }
        else if (Model.Location == "FBN")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "BUICK" || x.MAKE == "GMC"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Buick" || x.V_MakeName == "GMC"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBN");
        }
        else
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == Model.Location);
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == Model.Location);
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == Model.Location);
        }

    }

    var vehicleList = new List<VehicleDashboard.Models.CSV_vehicleUSED>();

    var companyNew = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => (x.status != 26 && x.status != 7));
    var companyUsed = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => (x.status == 1 || x.status == 2 || x.status == 4));

    if (Model.Condition.ToUpper() == "NEW" || Model.Condition.ToUpper() == "ALL")
    {
        foreach (var vehicle in companyNew)
        {
            var foundVehicle = Model.NewVehicleDashboard.WebsiteNewInventory.Find(x => x.V_stock.Trim() == vehicle.stk_no.Trim());

            if (foundVehicle == null)
            {
                var item = new VehicleDashboard.Models.CSV_vehicleUSED();

                item.loc = vehicle.LOC;
                item.vin = vehicle.vin;
                item.stk = vehicle.stk_no;
                item.yr = vehicle.year;
                item.make = vehicle.MAKE;
                item.carline = vehicle.CARLINE;
                item.daysinv = Int32.Parse(vehicle.days);
                item.list_amt = vehicle.list_amt;
                item.status = vehicle.status;
                item.s_cost = vehicle.flr_plan;
                item.init_acv = vehicle.int_price;

                item.MEMO1_CAT = "";

                var multipleVehicles = allUsedInventoryList.FindAll(x => x.stk.Trim() == vehicle.stk_no.Trim());
                if (multipleVehicles.Count > 1)
                {
                    var reason = "Duplicate Vehicle, located at ";

                    foreach (var duplicate in multipleVehicles)
                    {
                        reason += duplicate.loc + ",";
                    }
                    reason.TrimEnd(',');
                    item.MEMO1_CAT = reason;
                }

                vehicleList.Add(item);
            }
        }
    }
    if (Model.Condition.ToUpper() == "USED" || Model.Condition.ToUpper() == "ALL")
    {
        foreach (var vehicle in companyUsed)
        {
            var foundVehicle = Model.UsedVehicleDashboard.WebsiteUsedInventory.Find(x => x.V_stock.Trim() == vehicle.stk.Trim());

            if (foundVehicle == null)
            {
                var item = new VehicleDashboard.Models.CSV_vehicleUSED();

                item.loc = vehicle.loc;
                item.vin = vehicle.vin;
                item.stk = vehicle.stk;
                item.yr = vehicle.yr;
                item.make = vehicle.make;
                item.carline = vehicle.carline;
                item.daysinv = vehicle.daysinv;
                item.list_amt = vehicle.list_amt;
                item.inv_amt = vehicle.inv_amt;
                item.status = vehicle.status;
                item.MEMO1_CAT = "";

                var multipleVehicles = allUsedInventoryList.FindAll(x => x.stk.Trim() == vehicle.stk.Trim());
                if (multipleVehicles.Count > 1)
                {
                    var reason = "Duplicate Vehicle, located at ";

                    foreach(var duplicate in multipleVehicles)
                    {
                        reason += duplicate.loc + ",";
                    }
                    reason.TrimEnd(',');
                    item.MEMO1_CAT = reason;
                }


                vehicleList.Add(item);
            }
        }
    }
}

@section CSS
{
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

    <style type="text/css">
        .location-row {
            background-color: #eee;
        }
    </style>
}

<div class="row" style="border-bottom:1px solid #eee; margin-bottom:20px;">
    <div class="col-sm-12 col-md-10">
        <h2>Vehicles that Should be on FitzMall</h2>
        <div class="row location-row">
            <div class="col-xs-12">
                <h4>Locations:</h4>
                <input class="form-inline" type="radio" name="locationValue" id="chk-ALL" onclick="window.location='@applicationPath/Reports/ShouldBeOnFitzMall?Location=ALL&Condition=@Model.Condition';" value="ALL" @(Model.Location == "ALL" ? "checked" : "" )>
                <label class="form-inline" style="margin-right:15px;" for="chk-ALL">ALL</label>

                @foreach (var location in locations)
                {
                    <input class="form-inline" type="radio" name="locationValue" id="chk-@location" onclick="window.location='@applicationPath/Reports/ShouldBeOnFitzMall?Location=@location&Condition=@Model.Condition';" value="@location" @(Model.Location == location ? "checked" : "" )>
                    <label class="form-inline" style="margin-right:15px;" for="chk-@location">@location</label>
                }
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12">
        <table class="table table-striped table-bordered" id="table-InRecon">
            <thead>
                <tr>
                    <th>Location</th>
                    <th>Stock #</th>
                    <th>Year</th>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Days</th>
                    <th>List Amt</th>
                    <th>Status</th>
                    <th>Style Id</th>
                    <th>In Recon</th>
                    <th>Reason</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vehicle in vehicleList)
                {
                    var vehicleDetails = Model.VehicleData.Find(x => x.VIN == vehicle.vin);
                    var reason = "";
                    var highlight = "";

                    if (Model.Condition == "USED")
                    {
                        if (vehicle.inv_amt <= 500)
                        {
                            reason += "Missing or Incorrect Inventory Amount,";
                        }
                        if (vehicle.list_amt == 0)
                        {
                            reason += "Missing Internet Price,";
                        }
                        if (vehicleDetails == null)
                        {
                            reason += "Missing Style,";
                        }
                        if(vehicleDetails != null && (vehicleDetails.CertificationLevelCode == null || vehicleDetails.CertificationLevelCode == ""))
                        {
                            reason += "No Used Certification Level,";
                            highlight = "background-color:#ffff0094";
                        }
                    }
                    else
                    {
                        if(vehicle.list_amt == 0)
                        {
                            reason = "Missing MSRP,";
                        }
                        if(vehicle.s_cost == 0)
                        {
                            reason = "Missing Invoice Price,";
                        }
                        if(vehicle.init_acv == 0)
                        {
                            reason = "Missing Internet Price - Check Matrix,";
                        }
                    }
                    if (vehicle.MEMO1_CAT != "")
                    {
                        reason += vehicle.MEMO1_CAT;
                    }

                    reason = reason.TrimEnd(',');

                    <tr>
                        <td>@vehicle.loc</td>
                        @if(vehicleDetails != null && vehicleDetails.StyleId > 0)
                        {
                            <td><a href="@applicationPath/Chrome/Vehicle/?VIN=@vehicle.vin&Chromed=true" target="_blank">@vehicle.stk</a></td>
                        }
                        else if (vehicleDetails == null && vehicle.vin != null)
                        {
                            <td><a href="@applicationPath/Chrome/ChromeNoStyle/?VIN=@vehicle.vin" target="_blank">@vehicle.stk</a></td>
                        }
                        else
                        {
                            <td><a href="@applicationPath/Chrome/ChromeNoVIN/?stock=@vehicle.stk&year=@vehicle.yr&make=@vehicle.make&model=@vehicle.carline" target="_blank">@vehicle.stk</a></td>
                        }
                        <td>@vehicle.yr</td>
                        <td>@vehicle.make</td>
                        <td>@vehicle.carline</td>
                        <td>@vehicle.daysinv</td>
                        <td>@vehicle.list_amt.ToString("C",nfi)</td>
                        <td>@vehicle.status</td>
                        @if (vehicleDetails != null)
                        {
                            <td>@vehicleDetails.StyleId</td>
                            <td>@vehicleDetails.InReconditioning</td>
                            
                        }
                        else
                        {
                            <td></td>
                            <td></td>                            
                        }
                        
                        <td style="@highlight">@reason</td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
<script type="text/javascript">
            $(document).ready(function () {
                $('#table-InRecon').DataTable({
                    searching: true,
                    dom: 'Bfrti',
                    pageLength: -1,
                    buttons: [
                        {
                            extend: 'copyHtml5', footer: true,
                        },
                        {
                            extend: 'excelHtml5', footer: true,
                        },
                        {
                            extend: 'pdfHtml5', footer: true,
                            orientation: 'landscape'
                        },
                        {
                            extend: 'print', footer: true,
                            orientation: 'landscape'
                        }
                    ]
                    //,
                    //columnDefs: [
                    //  { type: 'any-number', targets: [18, 19, 20, 21, 22, 23, 24,25,26] },
                    //  { type: 'date-us', targets: [6] }
                    //]

                });
         
            });

</script>
}
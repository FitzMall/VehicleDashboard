@model VehicleDashboard.Models.VehicleOptionModel

@{
    ViewBag.Title = "All Vehicles";
    bool isPhotoCount = Model.PhotoShow != null;
    if (isPhotoCount == true)
    {
        switch (Model.PhotoShow)
        {
            case "10P":
                ViewBag.Title = "Vehicles with More than 10 Photos";
                break;
            case "10L":
                ViewBag.Title = "Vehicles with 10 or Less Photos";
                break;
            case "NONE":
                ViewBag.Title = "Vehicles with NO Photos";
                break;
        }
    }

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    System.Globalization.NumberFormatInfo nfi = new System.Globalization.CultureInfo("en-US", false).NumberFormat;
    nfi.CurrencyDecimalDigits = 0;
    nfi.PercentDecimalDigits = 1;
    nfi.CurrencySymbol = "";

    var locations = Model.UsedVehicleDashboard.WebsiteUsedInventory.Select(x => x.V_loc).Distinct().OrderBy(X => X).ToList();

    string sColHeader = "";
    if (isPhotoCount == true)
    {
        sColHeader = "# of Photos";
    }

    if (Model.Location != null && Model.Location != "ALL" && Model.Location != "")
    {

        if(Model.Location == "FBC")
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == "FBS" || x.loc.Contains("FBS"));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == "FBS");

        }
        else
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == Model.Location || x.loc.Contains(Model.Location));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == Model.Location);

        }

        if (Model.Location == "CJE")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "JEEP" || x.MAKE == "CHRYSLER"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Jeep" || x.V_MakeName == "Chrysler"));
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CJE");
        }
        else if (Model.Location == "CHY")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "HYUNDAI" || x.MAKE == "GENESIS"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Hyundai" || x.V_MakeName == "Genesis"));
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CHY");
        }
        else if (Model.Location == "CSS")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Subaru"));
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CSS");
        }
        else if (Model.Location == "FBC")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Subaru"));
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBC" || x.VehicleLocation == "FBS");
        }
        else if (Model.Location == "FBN")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "BUICK" || x.MAKE == "GMC"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Buick" || x.V_MakeName == "GMC"));
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBN");
        }
        else
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == Model.Location);
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == Model.Location);
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation != null && x.VehicleLocation != "" && x.VehicleLocation.Length == 3);
            Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation.Substring(0,3) == Model.Location.Substring(0, 3));
        }


    }

    var vehicleList = new List<VehicleDashboard.Models.CSV_vehicleUSED>();

    var companyNew = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => (x.status != 26 && x.status != 7));
    var companyUsed = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => (x.status == 1 || x.status == 2 || x.status == 4));

    if (Model.Condition.ToUpper() == "NEW" || Model.Condition.ToUpper() == "ALL")
    {
        foreach (var vehicle in companyNew)
        {

            var item = new VehicleDashboard.Models.CSV_vehicleUSED();

            item.loc = vehicle.LOC;
            item.vin = vehicle.vin;
            item.stk = vehicle.stk_no;
            item.yr = vehicle.year;
            item.make = vehicle.MAKE;
            item.carline = vehicle.CARLINE;
            item.daysinv = Int32.Parse(vehicle.days);
            item.list_amt = vehicle.list_amt;
            item.status = vehicle.status;
            item.Photos = vehicle.Photos;

            vehicleList.Add(item);

        }
    }
    if (Model.Condition.ToUpper() == "USED" || Model.Condition.ToUpper() == "ALL")
    {
        foreach (var vehicle in companyUsed)
        {

            var item = new VehicleDashboard.Models.CSV_vehicleUSED();

            item.loc = vehicle.loc;
            item.vin = vehicle.vin;
            item.stk = vehicle.stk;
            item.yr = vehicle.yr;
            item.make = vehicle.make;
            item.carline = vehicle.carline;
            item.daysinv = vehicle.daysinv;
            item.list_amt = vehicle.list_amt;
            item.status = vehicle.status;
            item.Photos = vehicle.Photos;

            var chromedVehicle = Model.VehicleData.Find(x => x.StockNumber.Trim() == vehicle.stk.Trim());
            if(chromedVehicle != null)
            {
                item.MEMO1_CAT = chromedVehicle.CertificationLevelCode.Trim();
                item.SALE_DATE = chromedVehicle.DateUpdated;

                switch(item.MEMO1_CAT)
                {
                    case "F911":
                        item.MEMO2_CAT = "Toyota Certified Used";
                        break;
                    case "F924":
                        item.MEMO2_CAT = "Volkswagen Certified Used";
                        break;
                    case "F925":
                        item.MEMO2_CAT = "Genesis Certified Used";
                        break;
                    case "F922":
                        item.MEMO2_CAT = "Cadillac Certified Used";
                        break;
                    case "F908":
                        item.MEMO2_CAT = "Hyundai Certified Used";
                        break;
                    case "F923":
                        item.MEMO2_CAT = "Mazda Certified Used";
                        break;
                    case "F906":
                        item.MEMO2_CAT = "GM Certifed Used";
                        break;
                    case "F907":
                        item.MEMO2_CAT = "Chrysler Certified Used";
                        break;
                    case "F912":
                        item.MEMO2_CAT = "Subaru Certified Used";
                        break;
                    case "F914":
                        item.MEMO2_CAT = "FitzWay Premium Used";
                        break;
                    case "F910":
                        item.MEMO2_CAT = "FitzWay Select Used";
                        break;
                    case "F915":
                        item.MEMO2_CAT = "FitzWay Value Used";
                        break;
                    case "F917":
                        item.MEMO2_CAT = "FitzWay HandyMan (FL)";
                        break;
                    case "F918":
                        item.MEMO2_CAT = "FitzWay HandyMan (PA)";
                        break;
                    case "F916":
                        item.MEMO2_CAT = "FitzWay HandyMan (MD)";
                        break;

                }

            }

            vehicleList.Add(item);
        }

    }
    }

    @section CSS
    {
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

    <style type="text/css">
        .location-row {
            background-color: #eee;
        }
    </style>
}

<div class="row" style="border-bottom:1px solid #eee; margin-bottom:20px;">
    <div class="col-sm-12 col-md-10">
        <h2>@ViewBag.Title</h2>
        <div class="row location-row">
            <div class="col-xs-12">
                <h4>Locations:</h4>
                <input class="form-inline" type="radio" name="locationValue" id="chk-ALL" onclick="window.location='@applicationPath/Reports/AllVehicles?Location=ALL&Condition=@Model.Condition';" value="ALL" @(Model.Location == "ALL" ? "checked" : "" )>
                <label class="form-inline" style="margin-right:15px;" for="chk-ALL">ALL</label>

                @foreach (var location in locations)
                {
                    <input class="form-inline" type="radio" name="locationValue" id="chk-@location" onclick="window.location='@applicationPath/Reports/AllVehicles?Location=@location&Condition=@Model.Condition';" value="@location" @(Model.Location == location ? "checked" : "" )>
                    <label class="form-inline" style="margin-right:15px;" for="chk-@location">@location</label>
                }
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-12">
        <table class="table table-striped table-bordered" id="table-InRecon">
            <thead>
                <tr>
                    <th>Location</th>
                    <th>Stock #</th>
                    <th>Year</th>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Days</th>
                    <th>List Amt</th>
                    <th>Status</th>
                    <th>Style Id</th>
                    <th>Fuel Type</th>
                    <th>In Recon</th>
                    <th>Manager Special</th>
                    <th>@sColHeader</th>
                    <th>Date Updated</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vehicle in vehicleList)
                {
                    var vehicleDetails = Model.VehicleData.Find(x => x.VIN == vehicle.vin);

                <tr>
                    <td>@vehicle.loc</td>
                    @if (vehicleDetails != null && vehicleDetails.StyleId > 0)
                    {
                        <td><a href="@applicationPath/Chrome/Vehicle/?VIN=@vehicle.vin&Chromed=true" target="_blank">@vehicle.stk</a></td>
                    }
                    else if (vehicleDetails == null && vehicle.vin != null)
                    {
                        <td><a href="@applicationPath/Chrome/ChromeNoStyle/?VIN=@vehicle.vin" target="_blank">@vehicle.stk</a></td>
                    }
                    else
                    {
                        <td><a href="@applicationPath/Chrome/ChromeNoVIN/?stock=@vehicle.stk&year=@vehicle.yr&make=@vehicle.make&model=@vehicle.carline" target="_blank">@vehicle.stk</a></td>
                    }
                    <td>@vehicle.yr</td>
                    <td>@vehicle.make</td>
                    <td>@vehicle.carline</td>
                    <td>@vehicle.daysinv</td>
                    <td>@vehicle.list_amt.ToString("C", nfi)</td>
                    <td>@vehicle.status</td>
                    @if (vehicleDetails != null)
                    {
                        <td>@vehicleDetails.StyleId</td>
                        <td>@vehicleDetails.FuelType</td>
                        <td>@vehicleDetails.InReconditioning</td>
                        <td>@vehicleDetails.ManagerSpecial</td>
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    }

                    @if (isPhotoCount != true)
                    {
                        <td>(@vehicle.MEMO1_CAT) @vehicle.MEMO2_CAT</td>
                    }
                    else
                    {
                        <td>@vehicle.Photos</td>
                    }
                    <td>@vehicle.SALE_DATE.ToShortDateString()</td>
                </tr>

                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
<script type="text/javascript">
            $(document).ready(function () {
                $('#table-InRecon').DataTable({
                    searching: true,
                    dom: 'Bfrti',
                    pageLength: -1,
                    buttons: [
                        {
                            extend: 'copyHtml5', footer: true,
                        },
                        {
                            extend: 'excelHtml5', footer: true,
                        },
                        {
                            extend: 'pdfHtml5', footer: true,
                            orientation: 'landscape'
                        },
                        {
                            extend: 'print', footer: true,
                            orientation: 'landscape'
                        }
                    ]
                    ,
                    columnDefs: [
                      { type: 'any-number', targets: [2,5,6,7,8] },
                      { type: 'date', targets: [12] }
                    ]

                });
         
            });

</script>
}
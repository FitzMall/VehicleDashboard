@model VehicleDashboard.Models.VehicleOptionModel
@{
    ViewBag.Title = "Vehicle Options Dashboard";

    var applicationPath = Request.ApplicationPath;

    if (applicationPath == "/")
    {
        applicationPath = "";
    }

    var usedVehicleCount = 0;
    var usedChromedCount = 0;
    var usedNeedsChromedCount = 0;
    var usedNeedsStyledCount = 0;

    var newMissingPhotos = 0;
    var newTenOrLessPhotos = 0;
    var new10PlusPhotos = 0;
    var usedMissingPhotos = 0;
    var usedTenOrLessPhotos = 0;
    var used10PlusPhotos = 0;

    var usedInReconCount = 0;
    var usedManagerSpecialsCount = 0;
    var usedShouldBeFMCount = 0;

    var newVehicleCount = 0;
    var newChromedCount = 0;
    var newNeedsChromedCount = 0;
    var newNeedsStyledCount = 0;

    var newManagerSpecialsCount = 0;
    var newShouldBeFMCount = 0;

    var newFuelType = 0;
    var usedFuelType = 0;

    var newMgrSpcCount = 0;
    var usedMgrSpcCount = 0;

    var usedHandyman = 0;
    var usedMissing1550 = 0;
    var usedMissing1551 = 0;
    var usedMissingCheckout = 0;

    var usedInReconVehicles = new List<VehicleDashboard.Models.VehicleData>();
    var test_val = 0;

    var locations = Model.UsedVehicleDashboard.WebsiteUsedInventory.Select(x => x.V_loc).Distinct().OrderBy(X => X).ToList();

    if (Model.Location != null && Model.Location != "ALL" && Model.Location != "")
    {

        if (Model.Location == "FBC")
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == "FBS" || x.loc.Contains("FBS"));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == "FBC");

        }
        else
        {
            Model.UsedVehicleDashboard.AllUsedInventory = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => x.location == Model.Location || x.loc.Contains(Model.Location));
            Model.UsedVehicleDashboard.WebsiteUsedInventory = Model.UsedVehicleDashboard.WebsiteUsedInventory.FindAll(x => x.V_loc == Model.Location);

        }


        if (Model.Location == "CJE")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "JEEP" || x.MAKE == "CHRYSLER"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Jeep" || x.V_MakeName == "Chrysler"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CJE");
        }
        else if (Model.Location == "CHY")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "HYUNDAI" || x.MAKE == "GENESIS"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Hyundai" || x.V_MakeName == "Genesis"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CHY");
        }
        else if (Model.Location == "CSS")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "CJE" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "CJE" && (x.V_MakeName == "Subaru"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "CSS");
        }
        else if (Model.Location == "FBC")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "SUBARU"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Subaru"));
            // Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBC" || x.VehicleLocation == "FBS");
        }
        else if (Model.Location == "FBN")
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == "FBS" && (x.MAKE == "BUICK" || x.MAKE == "GMC"));
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == "FBS" && (x.V_MakeName == "Buick" || x.V_MakeName == "GMC"));
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == "FBN");
        }
        else
        {
            Model.NewVehicleDashboard.AllNewInventory = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => x.LOC == Model.Location);
            Model.NewVehicleDashboard.WebsiteNewInventory = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_loc == Model.Location);
            //Model.VehicleData = Model.VehicleData.FindAll(x => x.VehicleLocation == Model.Location);
        }

    }

    if (Model.VehicleData != null)
    {
        if (Model.Location != null && Model.Location != "ALL" && Model.Location != "")
        {
            if (Model.Location == "FBC")
            {
                //usedInReconCount = Model.VehicleData.Count(x => x.InReconditioning == 1 && x.Condition == "USED" && (x.VehicleLocation == "FBS" || x.VehicleLocation == "FBC"));
                usedInReconVehicles = Model.VehicleData.FindAll(x => x.InReconditioning == 1 && x.Condition == "USED" && (x.VehicleLocation == "FBS" || x.VehicleLocation == "FBC"));

                usedManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "USED" && (x.VehicleLocation == "FBS" || x.VehicleLocation == "FBC"));
                newManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "NEW" && (x.VehicleLocation == "FBS" || x.VehicleLocation == "FBC"));

            }
            else
            {
                //usedInReconCount = Model.VehicleData.Count(x => x.InReconditioning == 1 && x.Condition == "USED" && x.VehicleLocation == Model.Location);
                usedInReconVehicles = Model.VehicleData.FindAll(x => x.InReconditioning == 1 && x.Condition == "USED" && x.VehicleLocation == Model.Location);
                usedManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "USED" && x.VehicleLocation == Model.Location);
                newManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "NEW" && x.VehicleLocation == Model.Location);

            }
        }
        else
        {
            //usedInReconCount = Model.VehicleData.Count(x => x.InReconditioning == 1 && x.Condition == "USED");
            usedInReconVehicles = Model.VehicleData.FindAll(x => x.InReconditioning == 1 && x.Condition == "USED");
            usedManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "USED");
            newManagerSpecialsCount = Model.VehicleData.Count(x => x.ManagerSpecial == 1 && x.Condition == "NEW");

        }
        foreach (var vehicle in usedInReconVehicles)
        {
            var vehicleDetails = Model.UsedVehicleDashboard.AllUsedInventory.Find(x => x.vin == vehicle.VIN);


            if (vehicleDetails != null && (vehicleDetails.status == 1 || vehicleDetails.status == 2))
            {
                usedInReconCount += 1;
            }
        }
    }
}

<style type="text/css">
    .quick-search {
        background-color: #f9f9f9;
        margin: 10px 0 20px 0px;
        padding: 20px 10px;
    }

    .location-row {
        background-color: #eee;
    }

    .row-divider {
        margin: 15px;
    }
</style>

<div class="row" style="border-bottom:1px solid #eee; margin-bottom:20px;">

    <div class="col-xs-11">
        <h2>Vehicle Options Dashboard</h2>
        <div class="row location-row">
            <div class="col-xs-12">
                <h4>Locations:</h4>
                <input class="form-inline" type="radio" name="locationValue" id="chk-ALL" onclick="window.location='@applicationPath/Chrome?Location=ALL';" value="ALL" @(Model.Location == "ALL" ? "checked" : "" )>
                <label class="form-inline" style="margin-right:15px;" for="chk-ALL">ALL</label>

                @foreach (var location in locations)
                {
                    <input class="form-inline" type="radio" name="locationValue" id="chk-@location" onclick="window.location='@applicationPath/Chrome?Location=@location';" value="@location" @(Model.Location == location ? "checked" : "" )>
                    <label class="form-inline" style="margin-right:15px;" for="chk-@location">@location</label>
                }
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-5">
        <h3>New Vehicle Summary</h3>
        @if (Model.NewVehicleDashboard != null)
        {
            var companyNew = Model.NewVehicleDashboard.AllNewInventory.FindAll(x => (x.status != 26 && x.status != 7));
            var companyWebsiteNew = Model.NewVehicleDashboard.WebsiteNewInventory.FindAll(x => x.V_Status != 2);

            newVehicleCount = companyNew.Count;
            newShouldBeFMCount = newVehicleCount - companyWebsiteNew.Count;
            new10PlusPhotos = companyNew.Count(x => x.Photos > 10);
            newTenOrLessPhotos = companyNew.Count(x => x.Photos > 0 && x.Photos <= 10);
            newMissingPhotos = companyNew.Count(x => x.Photos == 0);

            foreach (var vehicle in companyNew)
            {
                newChromedCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin);
                newNeedsStyledCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin && x.StyleId == 0 && x.Condition == "NEW");
                newFuelType += Model.VehicleData.Count(x => x.VIN == vehicle.vin && (x.FuelType == null) && x.Condition == "NEW");
                newMgrSpcCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin && x.ManagerSpecial == 1);
            }
            newNeedsChromedCount = newVehicleCount - newChromedCount;

    <div class="row">
        <div class="col-xs-2 text-center">
            <h4><br /><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=NEW" target="_blank">Vehicles</a></h4>
            <div class="box text-center">
                <div id="newCount" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/NotChromed?Location=@Model.Location&Condition=NEW" target="_blank">Needs Chromed</a></h4>
            <div class="box text-center">
                <div id="newNotChromed" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/ManagerSpecials?Location=@Model.Location&Condition=NEW" target="_blank">Manager Specials</a></h4>
            <div class="box text-center">
                <div id="newManagerSpecials" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/ShouldBeonFitzMall?Location=@Model.Location&Condition=NEW" target="_blank">Should be on FitzMall</a></h4>
            <div class="box text-center">
                <div id="newShouldBeFM" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/FuelType?Location=@Model.Location&Condition=NEW" target="_blank">Missing Fuel Type</a></h4>
            <div class="box text-center">
                <div id="newFuelType" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="row">
        </div>

        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=NEW&PhotoShow=NONE" target="_blank">Missing Photos</a></h4>
            <div class="box text-center">
                <div id="newMissingPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=NEW&PhotoShow=10L" target="_blank">1-10 Photos</a></h4>
            <div class="box text-center">
                <div id="newTenOrLessPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=NEW&PhotoShow=10P" target="_blank">More Than 10 Photos</a></h4>
            <div class="box text-center">
                <div id="new10PlusPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

    </div>

        }
    </div>
    <div class="col-xs-1">
    </div>

    <div class="col-xs-5">
        <h3>Used Vehicle Summary</h3>
        @if (Model.UsedVehicleDashboard != null)
        {
            var companyUsed = Model.UsedVehicleDashboard.AllUsedInventory.FindAll(x => (x.status == 1 || x.status == 2 || x.status == 4));
            var companyWebsiteUsed = Model.UsedVehicleDashboard.WebsiteUsedInventory;

            used10PlusPhotos = companyUsed.Count(x => x.Photos > 10);
            usedTenOrLessPhotos = companyUsed.Count(x => x.Photos > 0 && x.Photos <= 10);
            usedMissingPhotos = companyUsed.Count(x => x.Photos == 0);

            usedVehicleCount = companyUsed.Count;


            usedShouldBeFMCount = usedVehicleCount - companyWebsiteUsed.Count;
            usedMissingCheckout = 0;
            usedHandyman = 0;

            foreach (var vehicle in companyWebsiteUsed)
            {
                if (vehicle.FitzWayCheckedOut == 0)
                {
                    usedMissingCheckout += 1;
                }

            }

            foreach (var vehicle in companyUsed)
            {
                usedChromedCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin);
                usedNeedsStyledCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin && x.StyleId == 0 && x.Condition == "USED");

                test_val = Model.UsedVehicleDashboard.PDFs_1550_1551.Count(x => x.Contains("//192.168.100.16/c$/inetpub/wwwroot/production/FITZWAY/Pictures/UCPDFS/101-" + vehicle.vin.Trim() + ".pdf"));
                usedMissing1550 += test_val;

                if (test_val > 0)
                {
                  //  <p>1550 @vehicle.vin</p>
                }

                test_val = Model.UsedVehicleDashboard.PDFs_1550_1551.Count(x => x.Contains("//192.168.100.16/c$/inetpub/wwwroot/production/FITZWAY/Pictures/UCPDFS/151-" + vehicle.vin.Trim() + ".pdf"));
                usedMissing1551 += test_val;

                if (test_val > 0)
                {
                 //   <p>1551 @vehicle.vin</p>
                }


                usedFuelType += Model.VehicleData.Count(x => x.VIN == vehicle.vin && x.FuelType == null && x.Condition == "USED");

                if (vehicle.status == 1 || vehicle.status == 2 || vehicle.status == 4)
                {
                    usedMgrSpcCount += Model.VehicleData.Count(x => x.VIN == vehicle.vin && x.ManagerSpecial == 1);
                }

                if (vehicle.slscode == "HDM")
                {
                    usedHandyman += 1;
                }


            }
            usedNeedsChromedCount = usedVehicleCount - usedChromedCount;
            usedMissing1550 = (usedHandyman - usedMissing1550);
            usedMissing1551 = (usedHandyman - usedMissing1551);

    <div class="row">
        <div class="col-xs-2 text-center">
            <h4><br /><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=USED" target="_blank">Vehicles</a></h4>
            <div class="box text-center">
                <div id="usedCount" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/NotChromed?Location=@Model.Location&Condition=USED" target="_blank">Needs Chromed</a></h4>
            <div class="box text-center">
                <div id="usedNotChromed" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/ManagerSpecials?Location=@Model.Location&Condition=USED" target="_blank">Manager Specials</a></h4>
            <div class="box text-center">
                <div id="usedManagerSpecials" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/InRecon?Location=@Model.Location&Condition=USED" target="_blank">In Reconditioning</a></h4>
            <div class="box text-center">
                <div id="usedInRecon" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-3 text-center">
            <h4><a href="@applicationPath/Reports/ShouldBeonFitzMall?Location=@Model.Location&Condition=USED" target="_blank">Should be on FitzMall</a></h4>
            <div class="box text-center">
                <div id="usedShouldBeFM" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>



        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/FuelType?Location=@Model.Location&Condition=USED" target="_blank">Missing Fuel Type</a></h4>
            <div class="box text-center">
                <div id="usedFuelType" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

        <div>
            <div class="col-xs-2 text-center">
                <h4><br /><a href="@applicationPath/Reports/Handyman?Location=@Model.Location" target="_blank">Handyman</a></h4>
                <div class="box text-center">
                    <div id="usedHandyman" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
                </div>
            </div>

            <div class="col-xs-2 text-center">
                <h4><a href="@applicationPath/Reports/Handyman?Location=@Model.Location&NoPDF=1550" target="_blank">Missing 1550</a></h4>
                <div class="box text-center">
                    <div id="usedMissing1550" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
                </div>
            </div>

            <div class="col-xs-2 text-center">
                <h4><a href="@applicationPath/Reports/Handyman?Location=@Model.Location&NoPDF=1551" target="_blank">Missing 1551</a></h4>
                <div class="box text-center">
                    <div id="usedMissing1551" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
                </div>
            </div>

            <div class="col-xs-3 text-center">
                <h4><br /><a href="@applicationPath/Reports/NotCheckedOut?Location=@Model.Location" target="_blank">Missing Checkout</a></h4>
                <div class="box text-center">
                    <div id="usedMissingCheckout" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
                </div>
            </div>
        </div>


        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=USED&PhotoShow=NONE" target="_blank">Missing Photos</a></h4>
            <div class="box text-center">
                <div id="usedMissingPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

        <div class="col-xs-2 text-center">
            <h4><br /><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=USED&PhotoShow=10L" target="_blank">1-10 Photos</a></h4>
            <div class="box text-center">
                <div id="usedTenOrLessPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>
        <div class="col-xs-2 text-center">
            <h4><a href="@applicationPath/Reports/AllVehicles?Location=@Model.Location&Condition=USED&PhotoShow=10P" target="_blank">More Than 10 Photos</a></h4>
            <div class="box text-center">
                <div id="used10PlusPhotos" class="gauge" style="width:120px; height:100px; margin-left:auto; margin-right:auto;"></div>
            </div>
        </div>

    </div>

        }
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <hr />
    </div>
</div>


@section scripts
{
    <script src="~/Scripts/raphael-2.1.4.min.js"></script>
    <script src="~/Scripts/justgage.js"></script>

    <script>
            document.addEventListener("DOMContentLoaded", function(event) {


                var chromedUsed = new JustGage({
                    id: 'chromedUsed',
                    value: 35,
                    min: 0,
                    max: 100,
                    symbol: '%',
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                    gaugeWidthScale: 0.6,
                    counter: true
                });

                var usedCount = new JustGage({
                    id: "usedCount",
                    value: @usedVehicleCount,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var usedInRecon = new JustGage({
                    id: "usedInRecon",
                    value: @usedInReconCount,
                    min: 0,
                    max: @usedInReconCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var usedShouldBeFM = new JustGage({
                    id: "usedShouldBeFM",
                    value: @usedShouldBeFMCount,
                    min: 0,
                    max: @usedShouldBeFMCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var newShouldBeFM = new JustGage({
                    id: "newShouldBeFM",
                    value: @newShouldBeFMCount,
                    min: 0,
                    max: @newShouldBeFMCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var newFuelType = new JustGage({
                    id: "newFuelType",
                    value: @newFuelType,
                    min: 0,
                    max: @newFuelType,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var usedFuelType = new JustGage({
                    id: "usedFuelType",
                    value: @usedFuelType,
                    min: 0,
                    max: @usedFuelType,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var usedHandyman = new JustGage({
                    id: "usedHandyman",
                    value: @usedHandyman,
                    min: 0,
                    max: @usedHandyman,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });


                var usedMissingPhotos = new JustGage({
                   id: "usedMissingPhotos",
                    value: @usedMissingPhotos,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });


                var usedTenOrLessPhotos = new JustGage({
                   id: "usedTenOrLessPhotos",
                    value: @usedTenOrLessPhotos,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });


                var used10PlusPhotos = new JustGage({
                        id: "used10PlusPhotos",
                    value: @used10PlusPhotos,
                    min: 0,
                    max: @used10PlusPhotos,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });


                var newMissingPhotos = new JustGage({
                   id: "newMissingPhotos",
                    value: @newMissingPhotos,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });


                var newTenOrLessPhotos = new JustGage({
                   id: "newTenOrLessPhotos",
                    value: @newTenOrLessPhotos,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });

              var new10PlusPhotos = new JustGage({
                  id: "new10PlusPhotos",
                    value: @new10PlusPhotos,
                    min: 0,
                    max: @new10PlusPhotos,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });


                var usedMissing1550 = new JustGage({
                   id: "usedMissing1550",
                    value: @usedMissing1550,
                    min: 0,
                    max: @usedHandyman,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });

                var usedMissing1551 = new JustGage({
                    id: "usedMissing1551",
                    value: @usedMissing1551,
                    min: 0,
                    max: @usedHandyman,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });


   var usedMissingCheckout = new JustGage({
       id: "usedMissingCheckout",
                    value: @usedMissingCheckout,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });


                var usedManagerSpecials = new JustGage({
                    id: "usedManagerSpecials",
                    value: @usedMgrSpcCount,
                    min: 0,
                    max: @usedMgrSpcCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var newManagerSpecials = new JustGage({
                    id: "newManagerSpecials",
                    value: @newMgrSpcCount,
                    min: 0,
                    max: @newMgrSpcCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });
                var usedChromed = new JustGage({
                    id: "usedChromed",
                    value: @usedChromedCount,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });

                var usedNotChromed = new JustGage({
                    id: "usedNotChromed",
                    value: @usedNeedsChromedCount,
                    min: 0,
                    max: @usedVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#a9d70b", "#f9c802","#ff0000"
                    ],
                });

                var newCount = new JustGage({
                    id: "newCount",
                    value: @newVehicleCount,
                    min: 0,
                    max: @newVehicleCount,
                    donut: true,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    levelColors: [
                    "#a9d70b"
                    ],
                    hideInnerShadow: true
                });

                var newChromed = new JustGage({
                    id: "newChromed",
                    value: @newChromedCount,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#ff0000", "#f9c802", "#a9d70b"
                    ],
                });

                var newNotChromed = new JustGage({
                    id: "newNotChromed",
                    value: @newNeedsChromedCount,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#a9d70b", "#f9c802","#ff0000"
                    ],
                });
                var newNotStyled = new JustGage({
                    id: "newNotStyled",
                    value: @newNeedsStyledCount,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#a9d70b", "#f9c802","#ff0000"
                    ],
                });
                var usedNotStyled = new JustGage({
                    id: "usedNotStyled",
                    value: @usedNeedsStyledCount,
                    min: 0,
                    max: @newVehicleCount,
                    donut: false,
                    gaugeWidthScale: 0.6,
                    counter: true,
                    hideInnerShadow: true,
                    pointer: true,
                    pointerOptions: {
                        toplength: -15,
                        bottomlength: 10,
                        bottomwidth: 12,
                        color: '#8e8e93',
                        stroke: '#ffffff',
                        stroke_width: 3,
                        stroke_linecap: 'round'
                    },
                    levelColors: [
                    "#a9d70b", "#f9c802","#ff0000"
                    ],
                });
            });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#newListing').DataTable({
                searching: true,
                dom: 'Bfrti',
                pageLength: -1,
                buttons: [
                    {
                        extend: 'copyHtml5', footer: true,
                    },
                    {
                        extend: 'excelHtml5', footer: true,
                    },
                    {
                        extend: 'pdfHtml5', footer: true,
                        orientation: 'landscape'
                    },
                    {
                        extend: 'print', footer: true,
                        orientation: 'landscape'
                    }
                ]
                //,
                //columnDefs: [
                //  { type: 'any-number', targets: [18, 19, 20, 21, 22, 23, 24,25,26] },
                //  { type: 'date-us', targets: [6] }
                //]

            });
            $('#usedListing').DataTable({
                searching: true,
                dom: 'Bfrti',
                pageLength: -1,
                buttons: [
                    {
                        extend: 'copyHtml5', footer: true,
                    },
                    {
                        extend: 'excelHtml5', footer: true,
                    },
                    {
                        extend: 'pdfHtml5', footer: true,
                        orientation: 'landscape'
                    },
                    {
                        extend: 'print', footer: true,
                        orientation: 'landscape'
                    }
                ]
                //,
                //columnDefs: [
                //  { type: 'any-number', targets: [18, 19, 20, 21, 22, 23, 24,25,26] },
                //  { type: 'date-us', targets: [6] }
                //]

            });
        });

    </script>

}
